AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Lambda: {{ cookiecutter.project_slug }} Prod Environment stack belong to {{ cookiecutter.ownership_team }} Team by {{ cookiecutter.ownership_name }}

Parameters:
  FunctionName:
    Type: String
    Default: "{{ cookiecutter.project_slug }}"
    Description: FunctionName inject params name conventions {repository-name}-{env} from workflows
  FunctionDescription:
    Type: String
    Default: >
      {{ cookiecutter.project_description }}
      This service created by team {{ cookiecutter.ownership_team }} [{{ cookiecutter.ownership_name }}]
    Description: Function Description Show at lambda
  VersionDescription:
    Type: String
    Default: ""
    Description: Version Publish Description Show at lambda
  Project:
    Type: String
    Default: "{{ cookiecutter.project }}"
  Team:
    Type: String
    Default: "{{ cookiecutter.ownership_team }}"
  Environment:
    Type: String
    Default: "workload-prod"
  OwnershipName:
    Type: String
    Default: "{{ cookiecutter.ownership_name }}"
  DataClassification:
    Type: String
    Default: "confidential"
  Squad:
    Type: String
    Default: "{{ cookiecutter.squad }}"

Globals:
  Function:
    Timeout: 15
    Tracing: Active
  Api:
    TracingEnabled: true

Resources:
  Function:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref FunctionName
      Description: !Ref FunctionDescription
      CodeUri: ./src
      Handler: app.lambdaHandler
      PackageType: Zip
      Runtime: "{{ cookiecutter.run_time }}"
      MemorySize: 512
      Timeout: 15
      AutoPublishAlias: live
      VersionDescription: !Ref VersionDescription
      Architectures:
        - "arm64"
      Role: arn:aws:iam::{{ cookiecutter.aws_account_id }}:role/lambda-role/{{ cookiecutter.project_slug }}-role
      # Also AWS Parameter and Secrets help you handle secrets value example here
      # https://aws.amazon.com/blogs/compute/using-the-aws-parameter-and-secrets-lambda-extension-to-cache-parameters-and-secrets/
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension-Arm64:20"
        - !Sub "arn:aws:lambda:${AWS::Region}:044395824272:layer:AWS-Parameters-and-Secrets-Lambda-Extension-Arm64:12"
      Environment:
        Variables:
          ENV_NAME: "ENV_VALUE"
      Tags:
        Name: !Ref FunctionName
        Description: !Ref FunctionDescription
        Project: !Ref Project
        Team: !Ref Team
        Environment: !Ref Environment
        OwnershipName: !Ref OwnershipName
        DataClassification: !Ref DataClassification
        Squad: !Ref Squad

  ScheduleRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "scheduler.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "{{cookiecutter.project_slug}}-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:InvokeFunction"
                Resource: !GetAtt Function.Arn

  ScheduleRule:
    Type: AWS::Scheduler::Schedule
    Properties:
      Description: "Scheduler sample"
      FlexibleTimeWindow:
        MaximumWindowInMinutes: 30
        Mode: "FLEXIBLE"
      Name: "{{cookiecutter.project_slug}}"
      ScheduleExpression: "cron(0 7 ? * MON-FRI *)"
      ScheduleExpressionTimezone: "Asia/Bangkok"
      State: "ENABLED"
      Target:
        Arn: !GetAtt Function.Arn
        Input: "{}"
        RoleArn: !GetAtt ScheduleRole.Arn

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: LambdaApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: true

Outputs:
  FuntionOutput:
    Description: Output of Function Arn
    Value: !GetAtt Function.Arn
  FunctionVersion:
    Description: Output of Function Version
    Value: !Ref Function.Version
  FunctionAlias:
    Description: Output of Function Alias
    Value: !Ref Function.Alias
